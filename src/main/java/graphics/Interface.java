package graphics;

import account.LoginManager;
import java.awt.CardLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import library.Library;

/**
 *
 * @author Jiyansh Agarwal
 */
public class Interface extends javax.swing.JFrame {

    final private LoginManager login = new LoginManager("Login Data.library", 10);

    final private Library library = new Library("Book Data.library", "Student List.library", 2000, 100);

    /**
     * Creates new form Interface
     *
     */
    public Interface() {
        initComponents();

        String[] books = library.getBooks();
        String[] students = library.getStudents();

        //Fills all the lists with the books.
        for (String title : books) {
            ((DefaultListModel) BookList.getModel()).addElement(title);
            ((DefaultListModel) CheckoutBookList.getModel()).addElement(title);
        }

        //Fills the students list and find student with most books read.
        String mostBooksRead = "";
        int mostBooksRead_num = 0;

        for (String student : students) {
            ((DefaultListModel) CheckoutStudentList.getModel()).addElement(student);
            ((DefaultListModel) ST_StudentList.getModel()).addElement(student);

            if (Integer.parseInt(library.getStudentInfo(student)[4]) > mostBooksRead_num) {
                mostBooksRead = student;
                mostBooksRead_num = Integer.parseInt(library.getStudentInfo(student)[4]);
            }
        }
        ST_MostBooksRead.setText(mostBooksRead);

        //Fills the home page students with book checkout list.
        for (String student : students) {
            if (library.numOfBooksCheckedOutByStudent(student) > 0) {                       //If student has at least 1 book.
                ((DefaultListModel) StudentsCheckedOut.getModel()).addElement(student);
            }
        }

        //Fills the checked out book list with books
        for (String title : books) {
            if (library.bookIsCheckedOut(title)) {
                ((DefaultListModel) CheckedOutList.getModel()).addElement(title);
            }
        }

        //Scales the icons to the right size;
        ImageIcon menuIcons = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Student Raising Hand.jpeg")));
        ImageIcon scaled = new ImageIcon(menuIcons.getImage().getScaledInstance(900, 600, Image.SCALE_SMOOTH));
        Picture.setIcon(scaled);

        menuIcons = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Logout Icon.png")));
        scaled = new ImageIcon(menuIcons.getImage().getScaledInstance(20, 20, Image.SCALE_SMOOTH));
        LogoutIcon.setIcon(scaled);

        menuIcons = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Home Icon.png")));
        scaled = new ImageIcon(menuIcons.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH));
        HomeIcon.setIcon(scaled);

        menuIcons = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Search Icon.png")));
        scaled = new ImageIcon(menuIcons.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH));
        SearchIcon.setIcon(scaled);

        menuIcons = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Checkout Icon.png")));
        scaled = new ImageIcon(menuIcons.getImage().getScaledInstance(40, 25, Image.SCALE_SMOOTH));
        CheckoutIcon.setIcon(scaled);

        menuIcons = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Student Icon.png")));
        scaled = new ImageIcon(menuIcons.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH));
        StudentIcon.setIcon(scaled);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        StartUpScreen = new javax.swing.JPanel();
        Form = new javax.swing.JPanel();
        Username = new javax.swing.JTextField();
        Password = new javax.swing.JPasswordField();
        PasswordText = new javax.swing.JLabel();
        UsernameText = new javax.swing.JLabel();
        LoginButton = new javax.swing.JButton();
        SignUpButton = new javax.swing.JButton();
        RemoveAccount = new javax.swing.JLabel();
        ErrorText = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        Picture = new javax.swing.JLabel();
        LoggedInView = new javax.swing.JPanel();
        SideMenu = new javax.swing.JPanel();
        LogoutButton = new javax.swing.JPanel();
        LogoutIcon = new javax.swing.JLabel();
        HomeButton = new javax.swing.JPanel();
        HomeIcon = new javax.swing.JLabel();
        SearchTabButton = new javax.swing.JPanel();
        SearchIcon = new javax.swing.JLabel();
        CheckoutTabButton = new javax.swing.JPanel();
        CheckoutIcon = new javax.swing.JLabel();
        StudentTabButton = new javax.swing.JPanel();
        StudentIcon = new javax.swing.JLabel();
        PageChanger = new javax.swing.JPanel();
        HomeScreen = new javax.swing.JPanel();
        HomeTitle = new javax.swing.JLabel();
        H_BookInfo = new javax.swing.JPanel();
        H_HeadingBkTitl = new javax.swing.JLabel();
        H_BookTitle = new javax.swing.JLabel();
        H_HeadingAuthor = new javax.swing.JLabel();
        H_Author = new javax.swing.JLabel();
        H_HeadingPageCount = new javax.swing.JLabel();
        H_PageCount = new javax.swing.JLabel();
        H_HeadingLang = new javax.swing.JLabel();
        H_Language = new javax.swing.JLabel();
        H_HeadingAval = new javax.swing.JLabel();
        H_Availability = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        StudentsCheckedOut = new javax.swing.JList<>(new DefaultListModel<String>());
        jScrollPane3 = new javax.swing.JScrollPane();
        CheckedOutList = new javax.swing.JList<>(new DefaultListModel<String>());
        HeadingOverdue = new javax.swing.JLabel();
        HeadingCheckedOut = new javax.swing.JLabel();
        HomeWelcome = new javax.swing.JLabel();
        SearchScreen = new javax.swing.JPanel();
        SearchTitle = new javax.swing.JLabel();
        SearchPanel = new javax.swing.JPanel();
        BookTitleBox = new javax.swing.JTextField();
        HeadingBkTitl = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        S_ErrorText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookList = new javax.swing.JList<>(new DefaultListModel<String>());
        S_BookInfo = new javax.swing.JPanel();
        HeadingBkTitl2 = new javax.swing.JLabel();
        BookTitle = new javax.swing.JLabel();
        HeadingAuthor2 = new javax.swing.JLabel();
        Author = new javax.swing.JLabel();
        HeadingPageCount = new javax.swing.JLabel();
        PageCount = new javax.swing.JLabel();
        HeadingLang = new javax.swing.JLabel();
        Language = new javax.swing.JLabel();
        HeadingAval = new javax.swing.JLabel();
        Availability = new javax.swing.JLabel();
        AddBookButton = new javax.swing.JButton();
        RemoveBookButton = new javax.swing.JButton();
        CheckoutScreen = new javax.swing.JPanel();
        CheckoutTitle = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        CheckoutStudentList = new javax.swing.JList<>(new DefaultListModel<String>());
        jScrollPane5 = new javax.swing.JScrollPane();
        CheckoutBookList = new javax.swing.JList<>(new DefaultListModel<String>());
        C_Instructions = new javax.swing.JLabel();
        CheckoutButton = new javax.swing.JButton();
        CheckinButton = new javax.swing.JButton();
        C_StudentHeading = new javax.swing.JLabel();
        SearchPanel2 = new javax.swing.JPanel();
        C_BookTitleBox = new javax.swing.JTextField();
        HeadingBkTitl3 = new javax.swing.JLabel();
        C_SearchButton = new javax.swing.JButton();
        C_ErrorText = new javax.swing.JLabel();
        StudentScreen = new javax.swing.JPanel();
        StudentTitle = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ST_StudentList = new javax.swing.JList<>(new DefaultListModel<String>());
        ST_BookInfo = new javax.swing.JPanel();
        HeadingStName = new javax.swing.JLabel();
        StudentName = new javax.swing.JLabel();
        HeadingNumCheckedOut = new javax.swing.JLabel();
        NumCheckedOut = new javax.swing.JLabel();
        ST_Book1 = new javax.swing.JLabel();
        ST_Book2 = new javax.swing.JLabel();
        ST_Book3 = new javax.swing.JLabel();
        HeadingBooksRead = new javax.swing.JLabel();
        TotalBooksRead = new javax.swing.JLabel();
        AddStudentButton = new javax.swing.JButton();
        RemoveStudentButton = new javax.swing.JButton();
        ST_StudentHeading = new javax.swing.JLabel();
        ST_MostBooksReadHeading = new javax.swing.JLabel();
        ST_MostBooksRead = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bal-Vihar Library");
        setResizable(false);
        setSize(new java.awt.Dimension(960, 540));

        Main.setBackground(new java.awt.Color(47, 70, 113));
        Main.setFocusable(false);
        Main.setMaximumSize(new java.awt.Dimension(1000, 600));
        Main.setMinimumSize(new java.awt.Dimension(1000, 600));
        Main.setPreferredSize(new java.awt.Dimension(1000, 600));
        Main.setRequestFocusEnabled(false);
        Main.setVerifyInputWhenFocusTarget(false);
        Main.setLayout(new java.awt.CardLayout());

        StartUpScreen.setBackground(new java.awt.Color(47, 70, 113));
        StartUpScreen.setPreferredSize(new java.awt.Dimension(1000, 600));

        Form.setBackground(new java.awt.Color(47, 70, 113));
        Form.setFocusable(false);
        Form.setPreferredSize(new java.awt.Dimension(350, 300));
        Form.setRequestFocusEnabled(false);
        Form.setVerifyInputWhenFocusTarget(false);

        Username.setBackground(new java.awt.Color(220, 220, 220));
        Username.setToolTipText("Username");
        Username.setNextFocusableComponent(Password);

        Password.setBackground(new java.awt.Color(220, 220, 220));
        Password.setToolTipText("Password");
        Password.setNextFocusableComponent(LoginButton);

        PasswordText.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        PasswordText.setForeground(new java.awt.Color(255, 255, 255));
        PasswordText.setText("Password:");
        PasswordText.setToolTipText("");
        PasswordText.setFocusable(false);
        PasswordText.setRequestFocusEnabled(false);
        PasswordText.setVerifyInputWhenFocusTarget(false);

        UsernameText.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        UsernameText.setForeground(new java.awt.Color(255, 255, 255));
        UsernameText.setText("Username:");
        UsernameText.setToolTipText("");
        UsernameText.setFocusable(false);
        UsernameText.setRequestFocusEnabled(false);
        UsernameText.setVerifyInputWhenFocusTarget(false);

        LoginButton.setBackground(new java.awt.Color(255, 102, 0));
        LoginButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton.setText("Log In");
        LoginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        LoginButton.setNextFocusableComponent(Username);
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        SignUpButton.setBackground(new java.awt.Color(150, 150, 150));
        SignUpButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        SignUpButton.setText("Sign Up");
        SignUpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SignUpButton.setNextFocusableComponent(Username);
        SignUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpButtonActionPerformed(evt);
            }
        });

        RemoveAccount.setFont(new java.awt.Font("Andalus", 1, 14)); // NOI18N
        RemoveAccount.setForeground(new java.awt.Color(255, 255, 255));
        RemoveAccount.setText("Remove Account");
        RemoveAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveAccountMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RemoveAccountMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RemoveAccountMouseExited(evt);
            }
        });

        ErrorText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ErrorText.setForeground(new java.awt.Color(255, 153, 153));
        ErrorText.setToolTipText("");
        ErrorText.setAlignmentX(0.5F);
        ErrorText.setFocusable(false);
        ErrorText.setRequestFocusEnabled(false);
        ErrorText.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout FormLayout = new javax.swing.GroupLayout(Form);
        Form.setLayout(FormLayout);
        FormLayout.setHorizontalGroup(
            FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FormLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FormLayout.createSequentialGroup()
                        .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PasswordText)
                            .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(FormLayout.createSequentialGroup()
                                    .addComponent(SignUpButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(LoginButton)))
                            .addComponent(UsernameText))
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FormLayout.createSequentialGroup()
                        .addComponent(RemoveAccount)
                        .addGap(107, 107, 107))))
            .addGroup(FormLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(ErrorText)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        FormLayout.setVerticalGroup(
            FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FormLayout.createSequentialGroup()
                .addComponent(ErrorText)
                .addGap(7, 7, 7)
                .addComponent(UsernameText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(PasswordText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SignUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(RemoveAccount))
        );

        Title.setFont(new java.awt.Font("Adobe Hebrew", 0, 60)); // NOI18N
        Title.setForeground(new java.awt.Color(255, 255, 255));
        Title.setText("Bal-Vihar Library");
        Title.setFocusable(false);
        Title.setRequestFocusEnabled(false);
        Title.setVerifyInputWhenFocusTarget(false);

        Picture.setIcon(new javax.swing.ImageIcon(getClass().getResource("Student Raising Hand.jpeg")));
        Picture.setDoubleBuffered(true);
        Picture.setFocusable(false);
        Picture.setMaximumSize(new java.awt.Dimension(460, 600));
        Picture.setMinimumSize(new java.awt.Dimension(460, 600));
        Picture.setPreferredSize(new java.awt.Dimension(460, 600));
        Picture.setRequestFocusEnabled(false);
        Picture.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout StartUpScreenLayout = new javax.swing.GroupLayout(StartUpScreen);
        StartUpScreen.setLayout(StartUpScreenLayout);
        StartUpScreenLayout.setHorizontalGroup(
            StartUpScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StartUpScreenLayout.createSequentialGroup()
                .addComponent(Picture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(StartUpScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StartUpScreenLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(Form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(StartUpScreenLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        StartUpScreenLayout.setVerticalGroup(
            StartUpScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StartUpScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title)
                .addGap(56, 56, 56)
                .addComponent(Form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
            .addComponent(Picture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Main.add(StartUpScreen, "StartUp");

        LoggedInView.setBackground(new java.awt.Color(17, 33, 56));
        LoggedInView.setPreferredSize(new java.awt.Dimension(1000, 600));

        SideMenu.setBackground(new java.awt.Color(47, 70, 113));
        SideMenu.setMaximumSize(new java.awt.Dimension(60, 600));
        SideMenu.setMinimumSize(new java.awt.Dimension(60, 600));
        SideMenu.setPreferredSize(new java.awt.Dimension(60, 600));

        LogoutButton.setBackground(new java.awt.Color(47, 70, 113));
        LogoutButton.setMaximumSize(new java.awt.Dimension(30, 30));
        LogoutButton.setMinimumSize(new java.awt.Dimension(30, 30));
        LogoutButton.setPreferredSize(new java.awt.Dimension(30, 30));
        LogoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LogoutButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LogoutButtonMouseExited(evt);
            }
        });

        LogoutIcon.setMaximumSize(new java.awt.Dimension(20, 20));
        LogoutIcon.setMinimumSize(new java.awt.Dimension(20, 20));
        LogoutIcon.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout LogoutButtonLayout = new javax.swing.GroupLayout(LogoutButton);
        LogoutButton.setLayout(LogoutButtonLayout);
        LogoutButtonLayout.setHorizontalGroup(
            LogoutButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogoutButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(LogoutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        LogoutButtonLayout.setVerticalGroup(
            LogoutButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LogoutButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(LogoutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        HomeButton.setBackground(new java.awt.Color(47, 70, 113));
        HomeButton.setMaximumSize(new java.awt.Dimension(50, 50));
        HomeButton.setPreferredSize(new java.awt.Dimension(50, 50));
        HomeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HomeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HomeButtonMouseExited(evt);
            }
        });

        HomeIcon.setMaximumSize(new java.awt.Dimension(40, 40));
        HomeIcon.setMinimumSize(new java.awt.Dimension(40, 40));
        HomeIcon.setPreferredSize(new java.awt.Dimension(40, 40));

        javax.swing.GroupLayout HomeButtonLayout = new javax.swing.GroupLayout(HomeButton);
        HomeButton.setLayout(HomeButtonLayout);
        HomeButtonLayout.setHorizontalGroup(
            HomeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(HomeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        HomeButtonLayout.setVerticalGroup(
            HomeButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(HomeIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        SearchTabButton.setBackground(new java.awt.Color(47, 70, 113));
        SearchTabButton.setMaximumSize(new java.awt.Dimension(50, 50));
        SearchTabButton.setPreferredSize(new java.awt.Dimension(50, 50));
        SearchTabButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchTabButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SearchTabButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SearchTabButtonMouseExited(evt);
            }
        });

        SearchIcon.setMaximumSize(new java.awt.Dimension(40, 40));
        SearchIcon.setMinimumSize(new java.awt.Dimension(40, 40));
        SearchIcon.setPreferredSize(new java.awt.Dimension(40, 40));

        javax.swing.GroupLayout SearchTabButtonLayout = new javax.swing.GroupLayout(SearchTabButton);
        SearchTabButton.setLayout(SearchTabButtonLayout);
        SearchTabButtonLayout.setHorizontalGroup(
            SearchTabButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchTabButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(SearchIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        SearchTabButtonLayout.setVerticalGroup(
            SearchTabButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchTabButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(SearchIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        CheckoutTabButton.setBackground(new java.awt.Color(47, 70, 113));
        CheckoutTabButton.setMaximumSize(new java.awt.Dimension(50, 50));
        CheckoutTabButton.setPreferredSize(new java.awt.Dimension(50, 50));
        CheckoutTabButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CheckoutTabButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CheckoutTabButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CheckoutTabButtonMouseExited(evt);
            }
        });

        CheckoutIcon.setMaximumSize(new java.awt.Dimension(40, 25));
        CheckoutIcon.setMinimumSize(new java.awt.Dimension(40, 25));
        CheckoutIcon.setPreferredSize(new java.awt.Dimension(40, 25));

        javax.swing.GroupLayout CheckoutTabButtonLayout = new javax.swing.GroupLayout(CheckoutTabButton);
        CheckoutTabButton.setLayout(CheckoutTabButtonLayout);
        CheckoutTabButtonLayout.setHorizontalGroup(
            CheckoutTabButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckoutTabButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(CheckoutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        CheckoutTabButtonLayout.setVerticalGroup(
            CheckoutTabButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckoutTabButtonLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(CheckoutIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13))
        );

        StudentTabButton.setBackground(new java.awt.Color(47, 70, 113));
        StudentTabButton.setMaximumSize(new java.awt.Dimension(50, 50));
        StudentTabButton.setPreferredSize(new java.awt.Dimension(50, 50));
        StudentTabButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StudentTabButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                StudentTabButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                StudentTabButtonMouseExited(evt);
            }
        });

        StudentIcon.setMaximumSize(new java.awt.Dimension(40, 40));
        StudentIcon.setMinimumSize(new java.awt.Dimension(40, 40));
        StudentIcon.setPreferredSize(new java.awt.Dimension(40, 40));

        javax.swing.GroupLayout StudentTabButtonLayout = new javax.swing.GroupLayout(StudentTabButton);
        StudentTabButton.setLayout(StudentTabButtonLayout);
        StudentTabButtonLayout.setHorizontalGroup(
            StudentTabButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentTabButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(StudentIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        StudentTabButtonLayout.setVerticalGroup(
            StudentTabButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentTabButtonLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(StudentIcon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout SideMenuLayout = new javax.swing.GroupLayout(SideMenu);
        SideMenu.setLayout(SideMenuLayout);
        SideMenuLayout.setHorizontalGroup(
            SideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideMenuLayout.createSequentialGroup()
                .addGroup(SideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SideMenuLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(SideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CheckoutTabButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchTabButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StudentTabButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SideMenuLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SideMenuLayout.setVerticalGroup(
            SideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SideMenuLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(HomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(SearchTabButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(CheckoutTabButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(StudentTabButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PageChanger.setBackground(new java.awt.Color(17, 33, 56));
        PageChanger.setMaximumSize(new java.awt.Dimension(940, 600));
        PageChanger.setMinimumSize(new java.awt.Dimension(940, 600));
        PageChanger.setPreferredSize(new java.awt.Dimension(940, 600));
        PageChanger.setLayout(new java.awt.CardLayout());

        HomeScreen.setOpaque(false);

        HomeTitle.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        HomeTitle.setForeground(new java.awt.Color(255, 255, 255));
        HomeTitle.setText("Home");

        H_BookInfo.setBackground(new java.awt.Color(220, 220, 220));
        H_BookInfo.setPreferredSize(new java.awt.Dimension(300, 320));

        H_HeadingBkTitl.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        H_HeadingBkTitl.setText("Title");
        H_HeadingBkTitl.setFocusable(false);
        H_HeadingBkTitl.setRequestFocusEnabled(false);
        H_HeadingBkTitl.setVerifyInputWhenFocusTarget(false);

        H_BookTitle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        H_BookTitle.setText(" ");
        H_BookTitle.setFocusable(false);
        H_BookTitle.setRequestFocusEnabled(false);
        H_BookTitle.setVerifyInputWhenFocusTarget(false);

        H_HeadingAuthor.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        H_HeadingAuthor.setText("Author");
        H_HeadingAuthor.setFocusable(false);
        H_HeadingAuthor.setRequestFocusEnabled(false);
        H_HeadingAuthor.setVerifyInputWhenFocusTarget(false);

        H_Author.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        H_Author.setText(" ");
        H_Author.setFocusable(false);
        H_Author.setRequestFocusEnabled(false);
        H_Author.setVerifyInputWhenFocusTarget(false);

        H_HeadingPageCount.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        H_HeadingPageCount.setText("Number of Pages");
        H_HeadingPageCount.setFocusable(false);
        H_HeadingPageCount.setRequestFocusEnabled(false);
        H_HeadingPageCount.setVerifyInputWhenFocusTarget(false);

        H_PageCount.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        H_PageCount.setText(" ");
        H_PageCount.setFocusable(false);
        H_PageCount.setRequestFocusEnabled(false);
        H_PageCount.setVerifyInputWhenFocusTarget(false);

        H_HeadingLang.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        H_HeadingLang.setText("Language");
        H_HeadingLang.setFocusable(false);
        H_HeadingLang.setRequestFocusEnabled(false);
        H_HeadingLang.setVerifyInputWhenFocusTarget(false);

        H_Language.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        H_Language.setText(" ");
        H_Language.setFocusable(false);
        H_Language.setRequestFocusEnabled(false);
        H_Language.setVerifyInputWhenFocusTarget(false);

        H_HeadingAval.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        H_HeadingAval.setText("Availability");
        H_HeadingAval.setFocusable(false);
        H_HeadingAval.setRequestFocusEnabled(false);
        H_HeadingAval.setVerifyInputWhenFocusTarget(false);

        H_Availability.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        H_Availability.setText(" ");
        H_Availability.setFocusable(false);
        H_Availability.setRequestFocusEnabled(false);
        H_Availability.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout H_BookInfoLayout = new javax.swing.GroupLayout(H_BookInfo);
        H_BookInfo.setLayout(H_BookInfoLayout);
        H_BookInfoLayout.setHorizontalGroup(
            H_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(H_BookInfoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(H_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(H_Availability)
                    .addComponent(H_HeadingAval)
                    .addComponent(H_Language)
                    .addComponent(H_HeadingLang)
                    .addComponent(H_BookTitle)
                    .addComponent(H_HeadingBkTitl)
                    .addComponent(H_PageCount)
                    .addComponent(H_HeadingPageCount)
                    .addComponent(H_Author)
                    .addComponent(H_HeadingAuthor))
                .addContainerGap(163, Short.MAX_VALUE))
        );
        H_BookInfoLayout.setVerticalGroup(
            H_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(H_BookInfoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(H_HeadingBkTitl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(H_BookTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(H_HeadingAuthor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(H_Author)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(H_HeadingPageCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(H_PageCount)
                .addGap(14, 14, 14)
                .addComponent(H_HeadingLang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(H_Language)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(H_HeadingAval)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(H_Availability)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 320));

        StudentsCheckedOut.setBackground(new java.awt.Color(220, 220, 220));
        StudentsCheckedOut.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        StudentsCheckedOut.setPreferredSize(new java.awt.Dimension(240, 310));
        jScrollPane2.setViewportView(StudentsCheckedOut);

        jScrollPane3.setPreferredSize(new java.awt.Dimension(250, 320));

        CheckedOutList.setBackground(new java.awt.Color(220, 220, 220));
        CheckedOutList.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        CheckedOutList.setPreferredSize(new java.awt.Dimension(240, 310));
        CheckedOutList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                CheckedOutListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(CheckedOutList);

        HeadingOverdue.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        HeadingOverdue.setForeground(new java.awt.Color(255, 255, 255));
        HeadingOverdue.setText("Students With Books");

        HeadingCheckedOut.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        HeadingCheckedOut.setForeground(new java.awt.Color(255, 255, 255));
        HeadingCheckedOut.setText("Checked Out Books");

        HomeWelcome.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        HomeWelcome.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout HomeScreenLayout = new javax.swing.GroupLayout(HomeScreen);
        HomeScreen.setLayout(HomeScreenLayout);
        HomeScreenLayout.setHorizontalGroup(
            HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HomeTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeScreenLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HomeWelcome)
                    .addGroup(HomeScreenLayout.createSequentialGroup()
                        .addGroup(HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HeadingOverdue))
                        .addGap(40, 40, 40)
                        .addGroup(HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HomeScreenLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(H_BookInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(HeadingCheckedOut))))
                .addGap(30, 30, 30))
        );
        HomeScreenLayout.setVerticalGroup(
            HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeScreenLayout.createSequentialGroup()
                .addGroup(HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(HomeScreenLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(HeadingCheckedOut)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HomeScreenLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(HomeTitle)
                        .addGap(26, 26, 26)
                        .addComponent(HomeWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addComponent(HeadingOverdue)
                        .addGap(18, 18, 18)
                        .addGroup(HomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(H_BookInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(54, 54, 54))
        );

        PageChanger.add(HomeScreen, "Home");

        SearchScreen.setBackground(new java.awt.Color(17, 33, 56));
        SearchScreen.setMaximumSize(new java.awt.Dimension(940, 600));
        SearchScreen.setMinimumSize(new java.awt.Dimension(940, 600));
        SearchScreen.setOpaque(false);
        SearchScreen.setPreferredSize(new java.awt.Dimension(940, 600));

        SearchTitle.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        SearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        SearchTitle.setText("Book Search");

        SearchPanel.setBackground(new java.awt.Color(80, 106, 121));
        SearchPanel.setFocusable(false);
        SearchPanel.setMaximumSize(new java.awt.Dimension(900, 100));
        SearchPanel.setMinimumSize(new java.awt.Dimension(900, 100));
        SearchPanel.setPreferredSize(new java.awt.Dimension(900, 100));

        BookTitleBox.setBackground(new java.awt.Color(220, 220, 220));
        BookTitleBox.setToolTipText("Book Title");
        BookTitleBox.setMaximumSize(new java.awt.Dimension(600, 30));
        BookTitleBox.setMinimumSize(new java.awt.Dimension(600, 30));
        BookTitleBox.setPreferredSize(new java.awt.Dimension(600, 30));

        HeadingBkTitl.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        HeadingBkTitl.setForeground(new java.awt.Color(255, 255, 255));
        HeadingBkTitl.setText("Book Title");

        SearchButton.setBackground(new java.awt.Color(255, 102, 0));
        SearchButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(255, 255, 255));
        SearchButton.setText("Search");
        SearchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SearchButton.setMaximumSize(new java.awt.Dimension(90, 15));
        SearchButton.setMinimumSize(new java.awt.Dimension(90, 15));
        SearchButton.setNextFocusableComponent(BookList);
        SearchButton.setPreferredSize(new java.awt.Dimension(90, 15));
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        S_ErrorText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        S_ErrorText.setForeground(new java.awt.Color(255, 153, 153));
        S_ErrorText.setToolTipText("");
        S_ErrorText.setAlignmentX(0.5F);
        S_ErrorText.setFocusable(false);
        S_ErrorText.setRequestFocusEnabled(false);
        S_ErrorText.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout SearchPanelLayout = new javax.swing.GroupLayout(SearchPanel);
        SearchPanel.setLayout(SearchPanelLayout);
        SearchPanelLayout.setHorizontalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchPanelLayout.createSequentialGroup()
                        .addComponent(HeadingBkTitl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(S_ErrorText))
                    .addComponent(BookTitleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(90, Short.MAX_VALUE))
        );
        SearchPanelLayout.setVerticalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HeadingBkTitl)
                    .addComponent(S_ErrorText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BookTitleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(220, 220, 220));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(380, 340));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(380, 340));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(380, 340));

        BookList.setBackground(new java.awt.Color(220, 220, 220));
        BookList.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        BookList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        BookList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BookList.setNextFocusableComponent(HeadingBkTitl);
        BookList.setVisibleRowCount(10);
        BookList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                BookListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(BookList);

        S_BookInfo.setBackground(new java.awt.Color(220, 220, 220));
        S_BookInfo.setAlignmentX(0.0F);
        S_BookInfo.setMaximumSize(new java.awt.Dimension(350, 340));
        S_BookInfo.setMinimumSize(new java.awt.Dimension(350, 340));
        S_BookInfo.setPreferredSize(new java.awt.Dimension(350, 340));

        HeadingBkTitl2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingBkTitl2.setText("Title");
        HeadingBkTitl2.setFocusable(false);
        HeadingBkTitl2.setRequestFocusEnabled(false);
        HeadingBkTitl2.setVerifyInputWhenFocusTarget(false);

        BookTitle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BookTitle.setText(" ");
        BookTitle.setFocusable(false);
        BookTitle.setRequestFocusEnabled(false);
        BookTitle.setVerifyInputWhenFocusTarget(false);

        HeadingAuthor2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingAuthor2.setText("Author");
        HeadingAuthor2.setFocusable(false);
        HeadingAuthor2.setRequestFocusEnabled(false);
        HeadingAuthor2.setVerifyInputWhenFocusTarget(false);

        Author.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Author.setText(" ");
        Author.setFocusable(false);
        Author.setRequestFocusEnabled(false);
        Author.setVerifyInputWhenFocusTarget(false);

        HeadingPageCount.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingPageCount.setText("Number of Pages");
        HeadingPageCount.setFocusable(false);
        HeadingPageCount.setRequestFocusEnabled(false);
        HeadingPageCount.setVerifyInputWhenFocusTarget(false);

        PageCount.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        PageCount.setText(" ");
        PageCount.setFocusable(false);
        PageCount.setRequestFocusEnabled(false);
        PageCount.setVerifyInputWhenFocusTarget(false);

        HeadingLang.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingLang.setText("Language");
        HeadingLang.setFocusable(false);
        HeadingLang.setRequestFocusEnabled(false);
        HeadingLang.setVerifyInputWhenFocusTarget(false);

        Language.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Language.setText(" ");
        Language.setFocusable(false);
        Language.setRequestFocusEnabled(false);
        Language.setVerifyInputWhenFocusTarget(false);

        HeadingAval.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingAval.setText("Availability");
        HeadingAval.setFocusable(false);
        HeadingAval.setRequestFocusEnabled(false);
        HeadingAval.setVerifyInputWhenFocusTarget(false);

        Availability.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Availability.setText(" ");
        Availability.setFocusable(false);
        Availability.setRequestFocusEnabled(false);
        Availability.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout S_BookInfoLayout = new javax.swing.GroupLayout(S_BookInfo);
        S_BookInfo.setLayout(S_BookInfoLayout);
        S_BookInfoLayout.setHorizontalGroup(
            S_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(S_BookInfoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(S_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Availability)
                    .addComponent(HeadingAval)
                    .addComponent(Language)
                    .addComponent(HeadingLang)
                    .addComponent(BookTitle)
                    .addComponent(HeadingBkTitl2)
                    .addComponent(PageCount)
                    .addComponent(HeadingPageCount)
                    .addComponent(Author)
                    .addComponent(HeadingAuthor2))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        S_BookInfoLayout.setVerticalGroup(
            S_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(S_BookInfoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(HeadingBkTitl2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BookTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HeadingAuthor2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Author)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HeadingPageCount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PageCount)
                .addGap(14, 14, 14)
                .addComponent(HeadingLang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Language)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HeadingAval)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Availability)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        AddBookButton.setBackground(new java.awt.Color(255, 102, 0));
        AddBookButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        AddBookButton.setForeground(new java.awt.Color(255, 255, 255));
        AddBookButton.setText("Add Book");
        AddBookButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AddBookButton.setMaximumSize(new java.awt.Dimension(110, 50));
        AddBookButton.setMinimumSize(new java.awt.Dimension(110, 50));
        AddBookButton.setNextFocusableComponent(BookList);
        AddBookButton.setPreferredSize(new java.awt.Dimension(140, 50));
        AddBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookButtonActionPerformed(evt);
            }
        });

        RemoveBookButton.setBackground(new java.awt.Color(255, 102, 0));
        RemoveBookButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        RemoveBookButton.setForeground(new java.awt.Color(255, 255, 255));
        RemoveBookButton.setText("Remove Book");
        RemoveBookButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        RemoveBookButton.setMaximumSize(new java.awt.Dimension(110, 50));
        RemoveBookButton.setMinimumSize(new java.awt.Dimension(110, 50));
        RemoveBookButton.setNextFocusableComponent(BookList);
        RemoveBookButton.setPreferredSize(new java.awt.Dimension(140, 50));
        RemoveBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveBookButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SearchScreenLayout = new javax.swing.GroupLayout(SearchScreen);
        SearchScreen.setLayout(SearchScreenLayout);
        SearchScreenLayout.setHorizontalGroup(
            SearchScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchScreenLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(SearchScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(SearchScreenLayout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(S_BookInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addGroup(SearchScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(AddBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(RemoveBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(SearchScreenLayout.createSequentialGroup()
                            .addComponent(SearchTitle)
                            .addGap(722, 722, 722)))
                    .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        SearchScreenLayout.setVerticalGroup(
            SearchScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchScreenLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(SearchTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(SearchScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(S_BookInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SearchScreenLayout.createSequentialGroup()
                        .addComponent(AddBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(RemoveBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)))
                .addGap(50, 50, 50))
        );

        PageChanger.add(SearchScreen, "Search");

        CheckoutScreen.setOpaque(false);

        CheckoutTitle.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        CheckoutTitle.setForeground(new java.awt.Color(255, 255, 255));
        CheckoutTitle.setText("Checkout");

        jScrollPane4.setBackground(new java.awt.Color(220, 220, 220));
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setMaximumSize(new java.awt.Dimension(350, 340));
        jScrollPane4.setMinimumSize(new java.awt.Dimension(350, 340));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(350, 340));

        CheckoutStudentList.setBackground(new java.awt.Color(220, 220, 220));
        CheckoutStudentList.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        CheckoutStudentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CheckoutStudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CheckoutStudentList.setNextFocusableComponent(HeadingBkTitl);
        CheckoutStudentList.setVisibleRowCount(10);
        jScrollPane4.setViewportView(CheckoutStudentList);

        jScrollPane5.setBackground(new java.awt.Color(220, 220, 220));
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setMaximumSize(new java.awt.Dimension(350, 340));
        jScrollPane5.setMinimumSize(new java.awt.Dimension(350, 340));
        jScrollPane5.setPreferredSize(new java.awt.Dimension(350, 340));

        CheckoutBookList.setBackground(new java.awt.Color(220, 220, 220));
        CheckoutBookList.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        CheckoutBookList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CheckoutBookList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CheckoutBookList.setNextFocusableComponent(HeadingBkTitl);
        CheckoutBookList.setVisibleRowCount(10);
        jScrollPane5.setViewportView(CheckoutBookList);

        C_Instructions.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        C_Instructions.setForeground(new java.awt.Color(255, 255, 255));
        C_Instructions.setText("Select a student and book to checkout. Select a student to checkin.");

        CheckoutButton.setBackground(new java.awt.Color(255, 102, 0));
        CheckoutButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        CheckoutButton.setForeground(new java.awt.Color(255, 255, 255));
        CheckoutButton.setText("Checkout");
        CheckoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CheckoutButton.setMaximumSize(new java.awt.Dimension(110, 50));
        CheckoutButton.setMinimumSize(new java.awt.Dimension(110, 50));
        CheckoutButton.setNextFocusableComponent(BookList);
        CheckoutButton.setPreferredSize(new java.awt.Dimension(110, 50));
        CheckoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckoutButtonActionPerformed(evt);
            }
        });

        CheckinButton.setBackground(new java.awt.Color(255, 102, 0));
        CheckinButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        CheckinButton.setForeground(new java.awt.Color(255, 255, 255));
        CheckinButton.setText("Checkin");
        CheckinButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CheckinButton.setMaximumSize(new java.awt.Dimension(110, 50));
        CheckinButton.setMinimumSize(new java.awt.Dimension(110, 50));
        CheckinButton.setNextFocusableComponent(BookList);
        CheckinButton.setPreferredSize(new java.awt.Dimension(110, 50));
        CheckinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckinButtonActionPerformed(evt);
            }
        });

        C_StudentHeading.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        C_StudentHeading.setForeground(new java.awt.Color(255, 255, 255));
        C_StudentHeading.setText("Students");

        SearchPanel2.setBackground(new java.awt.Color(80, 106, 121));
        SearchPanel2.setFocusable(false);
        SearchPanel2.setMaximumSize(new java.awt.Dimension(350, 90));
        SearchPanel2.setMinimumSize(new java.awt.Dimension(350, 90));
        SearchPanel2.setPreferredSize(new java.awt.Dimension(350, 90));

        C_BookTitleBox.setBackground(new java.awt.Color(220, 220, 220));
        C_BookTitleBox.setToolTipText("Book Title");
        C_BookTitleBox.setMaximumSize(new java.awt.Dimension(300, 30));
        C_BookTitleBox.setMinimumSize(new java.awt.Dimension(300, 30));
        C_BookTitleBox.setPreferredSize(new java.awt.Dimension(300, 30));

        HeadingBkTitl3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        HeadingBkTitl3.setForeground(new java.awt.Color(255, 255, 255));
        HeadingBkTitl3.setText("Search Books");

        C_SearchButton.setBackground(new java.awt.Color(255, 102, 0));
        C_SearchButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 14)); // NOI18N
        C_SearchButton.setForeground(new java.awt.Color(255, 255, 255));
        C_SearchButton.setText("Search");
        C_SearchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        C_SearchButton.setMaximumSize(new java.awt.Dimension(90, 15));
        C_SearchButton.setMinimumSize(new java.awt.Dimension(90, 15));
        C_SearchButton.setNextFocusableComponent(BookList);
        C_SearchButton.setPreferredSize(new java.awt.Dimension(90, 15));
        C_SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C_SearchButtonActionPerformed(evt);
            }
        });

        C_ErrorText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        C_ErrorText.setForeground(new java.awt.Color(255, 153, 153));
        C_ErrorText.setToolTipText("");
        C_ErrorText.setAlignmentX(0.5F);
        C_ErrorText.setFocusable(false);
        C_ErrorText.setRequestFocusEnabled(false);
        C_ErrorText.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout SearchPanel2Layout = new javax.swing.GroupLayout(SearchPanel2);
        SearchPanel2.setLayout(SearchPanel2Layout);
        SearchPanel2Layout.setHorizontalGroup(
            SearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(SearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SearchPanel2Layout.createSequentialGroup()
                        .addComponent(HeadingBkTitl3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(C_ErrorText))
                    .addGroup(SearchPanel2Layout.createSequentialGroup()
                        .addComponent(C_BookTitleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(C_SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        SearchPanel2Layout.setVerticalGroup(
            SearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HeadingBkTitl3)
                    .addComponent(C_ErrorText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(C_BookTitleBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(C_SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CheckoutScreenLayout = new javax.swing.GroupLayout(CheckoutScreen);
        CheckoutScreen.setLayout(CheckoutScreenLayout);
        CheckoutScreenLayout.setHorizontalGroup(
            CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckoutScreenLayout.createSequentialGroup()
                .addGroup(CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CheckoutScreenLayout.createSequentialGroup()
                        .addGroup(CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CheckoutScreenLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CheckoutScreenLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(C_StudentHeading)))
                        .addGap(50, 50, 50)
                        .addGroup(CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SearchPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CheckinButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(CheckoutScreenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CheckoutTitle)
                            .addComponent(C_Instructions))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        CheckoutScreenLayout.setVerticalGroup(
            CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckoutScreenLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(CheckoutTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(C_Instructions)
                .addGap(18, 18, 18)
                .addGroup(CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckoutScreenLayout.createSequentialGroup()
                        .addComponent(C_StudentHeading)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckoutScreenLayout.createSequentialGroup()
                        .addComponent(SearchPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(CheckoutScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(CheckoutScreenLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(CheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(CheckinButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(50, 50, 50))
        );

        PageChanger.add(CheckoutScreen, "Checkout");

        StudentScreen.setBackground(new java.awt.Color(17, 33, 56));
        StudentScreen.setMaximumSize(new java.awt.Dimension(940, 600));
        StudentScreen.setMinimumSize(new java.awt.Dimension(940, 600));
        StudentScreen.setOpaque(false);

        StudentTitle.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        StudentTitle.setForeground(new java.awt.Color(255, 255, 255));
        StudentTitle.setText("Students");

        jScrollPane6.setBackground(new java.awt.Color(220, 220, 220));
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setMaximumSize(new java.awt.Dimension(350, 340));
        jScrollPane6.setMinimumSize(new java.awt.Dimension(350, 340));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(350, 340));

        ST_StudentList.setBackground(new java.awt.Color(220, 220, 220));
        ST_StudentList.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        ST_StudentList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ST_StudentList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ST_StudentList.setNextFocusableComponent(HeadingBkTitl);
        ST_StudentList.setVisibleRowCount(10);
        ST_StudentList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ST_StudentListValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(ST_StudentList);

        ST_BookInfo.setBackground(new java.awt.Color(220, 220, 220));
        ST_BookInfo.setMaximumSize(new java.awt.Dimension(350, 340));
        ST_BookInfo.setMinimumSize(new java.awt.Dimension(350, 340));
        ST_BookInfo.setPreferredSize(new java.awt.Dimension(350, 340));

        HeadingStName.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingStName.setText("Name");
        HeadingStName.setFocusable(false);
        HeadingStName.setRequestFocusEnabled(false);
        HeadingStName.setVerifyInputWhenFocusTarget(false);

        StudentName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        StudentName.setText(" ");
        StudentName.setFocusable(false);
        StudentName.setRequestFocusEnabled(false);
        StudentName.setVerifyInputWhenFocusTarget(false);

        HeadingNumCheckedOut.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingNumCheckedOut.setText("Number of Books Checked Out");
        HeadingNumCheckedOut.setFocusable(false);
        HeadingNumCheckedOut.setRequestFocusEnabled(false);
        HeadingNumCheckedOut.setVerifyInputWhenFocusTarget(false);

        NumCheckedOut.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        NumCheckedOut.setFocusable(false);
        NumCheckedOut.setRequestFocusEnabled(false);
        NumCheckedOut.setVerifyInputWhenFocusTarget(false);

        ST_Book1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ST_Book1.setFocusable(false);
        ST_Book1.setRequestFocusEnabled(false);
        ST_Book1.setVerifyInputWhenFocusTarget(false);

        ST_Book2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ST_Book2.setFocusable(false);
        ST_Book2.setRequestFocusEnabled(false);
        ST_Book2.setVerifyInputWhenFocusTarget(false);

        ST_Book3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ST_Book3.setFocusable(false);
        ST_Book3.setRequestFocusEnabled(false);
        ST_Book3.setVerifyInputWhenFocusTarget(false);

        HeadingBooksRead.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        HeadingBooksRead.setText("Total Books Read");
        HeadingBooksRead.setFocusable(false);
        HeadingBooksRead.setRequestFocusEnabled(false);
        HeadingBooksRead.setVerifyInputWhenFocusTarget(false);

        TotalBooksRead.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        TotalBooksRead.setText(" ");
        TotalBooksRead.setFocusable(false);
        TotalBooksRead.setRequestFocusEnabled(false);
        TotalBooksRead.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout ST_BookInfoLayout = new javax.swing.GroupLayout(ST_BookInfo);
        ST_BookInfo.setLayout(ST_BookInfoLayout);
        ST_BookInfoLayout.setHorizontalGroup(
            ST_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ST_BookInfoLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(ST_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ST_Book3)
                    .addComponent(ST_Book2)
                    .addComponent(ST_Book1)
                    .addComponent(TotalBooksRead)
                    .addComponent(HeadingBooksRead)
                    .addComponent(StudentName)
                    .addComponent(HeadingStName)
                    .addComponent(NumCheckedOut)
                    .addComponent(HeadingNumCheckedOut))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        ST_BookInfoLayout.setVerticalGroup(
            ST_BookInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ST_BookInfoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(HeadingStName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StudentName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HeadingNumCheckedOut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NumCheckedOut)
                .addGap(20, 20, 20)
                .addComponent(ST_Book1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ST_Book2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ST_Book3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(HeadingBooksRead)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TotalBooksRead)
                .addGap(42, 42, 42))
        );

        AddStudentButton.setBackground(new java.awt.Color(255, 102, 0));
        AddStudentButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        AddStudentButton.setForeground(new java.awt.Color(255, 255, 255));
        AddStudentButton.setText("Add Student");
        AddStudentButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AddStudentButton.setMaximumSize(new java.awt.Dimension(160, 50));
        AddStudentButton.setMinimumSize(new java.awt.Dimension(160, 50));
        AddStudentButton.setNextFocusableComponent(BookList);
        AddStudentButton.setPreferredSize(new java.awt.Dimension(160, 50));
        AddStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStudentButtonActionPerformed(evt);
            }
        });

        RemoveStudentButton.setBackground(new java.awt.Color(255, 102, 0));
        RemoveStudentButton.setFont(new java.awt.Font("Adobe Caslon Pro", 1, 18)); // NOI18N
        RemoveStudentButton.setForeground(new java.awt.Color(255, 255, 255));
        RemoveStudentButton.setText("Remove Student");
        RemoveStudentButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        RemoveStudentButton.setMaximumSize(new java.awt.Dimension(160, 50));
        RemoveStudentButton.setMinimumSize(new java.awt.Dimension(160, 50));
        RemoveStudentButton.setNextFocusableComponent(BookList);
        RemoveStudentButton.setPreferredSize(new java.awt.Dimension(160, 50));
        RemoveStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveStudentButtonActionPerformed(evt);
            }
        });

        ST_StudentHeading.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        ST_StudentHeading.setForeground(new java.awt.Color(255, 255, 255));
        ST_StudentHeading.setText("Students");

        ST_MostBooksReadHeading.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        ST_MostBooksReadHeading.setForeground(new java.awt.Color(255, 255, 255));
        ST_MostBooksReadHeading.setText("Most Books Read:");

        ST_MostBooksRead.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ST_MostBooksRead.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout StudentScreenLayout = new javax.swing.GroupLayout(StudentScreen);
        StudentScreen.setLayout(StudentScreenLayout);
        StudentScreenLayout.setHorizontalGroup(
            StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentScreenLayout.createSequentialGroup()
                .addGroup(StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StudentScreenLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StudentScreenLayout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(ST_BookInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(AddStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RemoveStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(StudentTitle)
                            .addComponent(ST_StudentHeading)))
                    .addGroup(StudentScreenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ST_MostBooksReadHeading)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ST_MostBooksRead)))
                .addGap(10, 10, 10))
        );
        StudentScreenLayout.setVerticalGroup(
            StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentScreenLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(StudentTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ST_MostBooksReadHeading)
                    .addComponent(ST_MostBooksRead))
                .addGap(38, 38, 38)
                .addGroup(StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentScreenLayout.createSequentialGroup()
                        .addComponent(AddStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(RemoveStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentScreenLayout.createSequentialGroup()
                        .addGroup(StudentScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ST_BookInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(StudentScreenLayout.createSequentialGroup()
                                .addComponent(ST_StudentHeading)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50))))
        );

        PageChanger.add(StudentScreen, "StudentScreen");

        javax.swing.GroupLayout LoggedInViewLayout = new javax.swing.GroupLayout(LoggedInView);
        LoggedInView.setLayout(LoggedInViewLayout);
        LoggedInViewLayout.setHorizontalGroup(
            LoggedInViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoggedInViewLayout.createSequentialGroup()
                .addComponent(SideMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(PageChanger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        LoggedInViewLayout.setVerticalGroup(
            LoggedInViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SideMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoggedInViewLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PageChanger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Main.add(LoggedInView, "LoggedIn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        ErrorText.setText("");

        if (!login.isEmpty()) {
            String username = Username.getText().trim();
            char[] password = Password.getPassword();

            if (username.length() > 100) {
                ErrorText.setText("Username is too long.");
            } else if (username.length() < 1 || password.length < 1) {
                ErrorText.setText("Please fill out both the username and password.");
            } else if (login.authenticate(username, password)) {
                CardLayout card = (CardLayout) Main.getLayout();
                HomeWelcome.setText("Welcome " + username + "!");
                card.show(Main, "LoggedIn");
            } else {
                ErrorText.setText("Incorrect username or password.");
                LoginManager.wipePassword(password);
            }
        } else {
            ErrorText.setText("No accounts added. Click 'Sign Up' to add account");
        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void SignUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpButtonActionPerformed
        ErrorText.setText("");

        String username = Username.getText().trim();
        char[] password = Password.getPassword();

        if (username.length() > 100) {
            ErrorText.setText("Username is too long.");
        } else if (username.length() < 1 || password.length < 1) {
            ErrorText.setText("Username or password cannot be blank.");
        } else if (login.usernameAlreadyExists(username)) {
            ErrorText.setText("Username already exists.");
        } else if (!login.addAccount(username, username, password)) {
            ErrorText.setText("All available accounts are used up.");
        } else {
            ErrorText.setText("Account added!");
        }
    }//GEN-LAST:event_SignUpButtonActionPerformed

    private void RemoveAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveAccountMouseClicked
        ErrorText.setText("");

        if (!login.isEmpty()) {
            String username = Username.getText().trim();
            char[] password = Password.getPassword();

            if (username.length() > 100) {
                ErrorText.setText("Username is too long.");
            } else if (username.length() < 1 || password.length < 1) {
                ErrorText.setText("Please fill out both the username and password.");
            } else if (login.authenticate(username, password)) {
                if (login.removeAccount(username)) {
                    ErrorText.setText("Account removed");
                } else {
                    ErrorText.setText("There was an error. Account NOT removed.");
                }
            } else {
                ErrorText.setText("Incorrect username or password.");
            }
        } else {
            ErrorText.setText("No accounts added. Click 'Sign Up' to add account");
        }
    }//GEN-LAST:event_RemoveAccountMouseClicked

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        S_ErrorText.setText("");

        String query = BookTitleBox.getText().toLowerCase().trim();

        if (query.length() == 0) {
            ((DefaultListModel) BookList.getModel()).removeAllElements();

            for (String title : library.getBooks()) {
                ((DefaultListModel) BookList.getModel()).addElement(title);
            }
        } else if (query.length() < 3) {
            S_ErrorText.setText("Please search for at least 3 characters!");
        } else {
            ((DefaultListModel) BookList.getModel()).removeAllElements();

            for (String title : library.getBooks()) {
                if (title.length() > query.length() && title.substring(0, query.length()).toLowerCase().equals(query)) {
                    ((DefaultListModel) BookList.getModel()).addElement(title);
                }
            }

            if (((DefaultListModel) BookList.getModel()).isEmpty()) {
                ((DefaultListModel) BookList.getModel()).addElement("No Results Found.");
            }
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void BookListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_BookListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (BookList.getSelectedIndex() == -1) {
                setBookInfo(null);
            } else {
                setBookInfo(BookList.getSelectedValue());
            }
        }
    }//GEN-LAST:event_BookListValueChanged

    private void HomeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseClicked
        CardLayout card = (CardLayout) PageChanger.getLayout();
        card.show(PageChanger, "Home");
    }//GEN-LAST:event_HomeButtonMouseClicked

    private void HomeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseEntered
        HomeButton.setBackground(new java.awt.Color(100, 130, 190));
    }//GEN-LAST:event_HomeButtonMouseEntered

    private void HomeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseExited
        HomeButton.setBackground(new java.awt.Color(47, 70, 113));
    }//GEN-LAST:event_HomeButtonMouseExited

    private void SearchTabButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchTabButtonMouseClicked
        CardLayout card = (CardLayout) PageChanger.getLayout();
        card.show(PageChanger, "Search");
    }//GEN-LAST:event_SearchTabButtonMouseClicked

    private void SearchTabButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchTabButtonMouseEntered
        SearchTabButton.setBackground(new java.awt.Color(100, 130, 190));
    }//GEN-LAST:event_SearchTabButtonMouseEntered

    private void SearchTabButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchTabButtonMouseExited
        SearchTabButton.setBackground(new java.awt.Color(47, 70, 113));
    }//GEN-LAST:event_SearchTabButtonMouseExited

    private void CheckoutTabButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckoutTabButtonMouseClicked
        CardLayout card = (CardLayout) PageChanger.getLayout();
        card.show(PageChanger, "Checkout");
    }//GEN-LAST:event_CheckoutTabButtonMouseClicked

    private void CheckoutTabButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckoutTabButtonMouseEntered
        CheckoutTabButton.setBackground(new java.awt.Color(100, 130, 190));
    }//GEN-LAST:event_CheckoutTabButtonMouseEntered

    private void CheckoutTabButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckoutTabButtonMouseExited
        CheckoutTabButton.setBackground(new java.awt.Color(47, 70, 113));
    }//GEN-LAST:event_CheckoutTabButtonMouseExited

    private void CheckedOutListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_CheckedOutListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (CheckedOutList.getSelectedIndex() == -1) {
                setBookInfo2(null);
            } else {
                setBookInfo2(CheckedOutList.getSelectedValue());
            }
        }
    }//GEN-LAST:event_CheckedOutListValueChanged

    private void RemoveAccountMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveAccountMouseEntered
        RemoveAccount.setForeground(new java.awt.Color(150, 150, 150));
    }//GEN-LAST:event_RemoveAccountMouseEntered

    private void RemoveAccountMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveAccountMouseExited
        RemoveAccount.setForeground(new java.awt.Color(240, 240, 240));
    }//GEN-LAST:event_RemoveAccountMouseExited

    private void LogoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutButtonMouseClicked
        CardLayout card = (CardLayout) Main.getLayout();
        card.show(Main, "StartUp");
    }//GEN-LAST:event_LogoutButtonMouseClicked

    private void LogoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutButtonMouseEntered
        LogoutButton.setBackground(new java.awt.Color(100, 130, 190));
    }//GEN-LAST:event_LogoutButtonMouseEntered

    private void LogoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutButtonMouseExited
        LogoutButton.setBackground(new java.awt.Color(47, 70, 113));
    }//GEN-LAST:event_LogoutButtonMouseExited

    private void CheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckoutButtonActionPerformed
        String student = CheckoutStudentList.getSelectedValue();
        String book = CheckoutBookList.getSelectedValue();

        if (student == null) {
            JOptionPane.showMessageDialog(null, "Student not selected!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (book == null) {
            JOptionPane.showMessageDialog(null, "Book not selected!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {

            int checkout = JOptionPane.showConfirmDialog(null, "Are you sure you want to checkout " + book + " to " + student + "?",
                    "Proceed?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (checkout == JOptionPane.YES_OPTION) {

                try {
                    library.checkOutBook(book, student);

                    ((DefaultListModel) CheckedOutList.getModel()).addElement(book);

                    if (!((DefaultListModel) StudentsCheckedOut.getModel()).contains(student)) {
                        ((DefaultListModel) StudentsCheckedOut.getModel()).addElement(student);
                    }

                    if (Integer.parseInt(library.getStudentInfo(student)[4])
                            > Integer.parseInt(library.getStudentInfo(ST_MostBooksRead.getText())[4])) {
                        ST_MostBooksRead.setText(student);
                    }

                    JOptionPane.showMessageDialog(null, book + " checked out to " + student + "!", "Checkout Complete", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_CheckoutButtonActionPerformed

    private void CheckinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckinButtonActionPerformed
        String student = CheckoutStudentList.getSelectedValue();

        if (student == null) {
            JOptionPane.showMessageDialog(null, "Student not selected!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (library.numOfBooksCheckedOutByStudent(student) == 0) {
            JOptionPane.showMessageDialog(null, student + " has no books.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int numOfBooks = library.numOfBooksCheckedOutByStudent(student);

            Object[] questions = new Object[numOfBooks + 1];

            questions[0] = "Select the books you want to checkin for this student.";
            String[] books = library.getStudentBooks(student);

            for (int i = 0; i < numOfBooks; i++) {
                questions[i + 1] = new JCheckBox(books[i]);
            }

            int checkin = JOptionPane.showConfirmDialog(null, questions, "Checkin", JOptionPane.OK_CANCEL_OPTION);

            if (checkin == JOptionPane.OK_OPTION) {
                ArrayList<String> booksToCheckIn = new ArrayList<>();

                for (int i = 1; i < questions.length; i++) {
                    JCheckBox book = (JCheckBox) questions[i];

                    if (book.isSelected()) {
                        booksToCheckIn.add(book.getText());
                    }
                }

                try {
                    library.checkInBook(booksToCheckIn.toArray(new String[booksToCheckIn.size()]), student);

                    if (library.numOfBooksCheckedOutByStudent(student) == 0) {
                        ((DefaultListModel) StudentsCheckedOut.getModel()).removeElement(student);
                    }

                    for (String book : booksToCheckIn) {
                        ((DefaultListModel) CheckedOutList.getModel()).removeElement(book);
                    }

                    JOptionPane.showMessageDialog(null, "Books from " + student + " checked in!", "Checkin Complete", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }//GEN-LAST:event_CheckinButtonActionPerformed

    private void C_SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C_SearchButtonActionPerformed
        C_ErrorText.setText("");

        String query = C_BookTitleBox.getText().toLowerCase().trim();

        if (query.length() == 0) {
            ((DefaultListModel) CheckoutBookList.getModel()).removeAllElements();

            for (String title : library.getBooks()) {
                ((DefaultListModel) CheckoutBookList.getModel()).addElement(title);
            }
        } else if (query.length() < 3) {
            C_ErrorText.setText("Minimum 3 characters!");
        } else {
            ((DefaultListModel) CheckoutBookList.getModel()).removeAllElements();

            for (String title : library.getBooks()) {
                if (title.length() > query.length() && title.substring(0, query.length()).toLowerCase().equals(query)) {
                    ((DefaultListModel) CheckoutBookList.getModel()).addElement(title);
                }
            }

            if (((DefaultListModel) CheckoutBookList.getModel()).isEmpty()) {
                ((DefaultListModel) CheckoutBookList.getModel()).addElement("No Results Found.");
            }
        }
    }//GEN-LAST:event_C_SearchButtonActionPerformed

    private void ST_StudentListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ST_StudentListValueChanged
        if (evt.getValueIsAdjusting() == false) {
            if (ST_StudentList.getSelectedIndex() == -1) {
                setStudentInfo(null);
            } else {
                setStudentInfo(ST_StudentList.getSelectedValue());
            }
        }
    }//GEN-LAST:event_ST_StudentListValueChanged

    private void RemoveStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveStudentButtonActionPerformed
        String name = JOptionPane.showInputDialog(null, "Name of student to remove?", "Remove Student", JOptionPane.QUESTION_MESSAGE);

        if (name != null) {
            name = name.trim();
            try {
                if (library.removeStudent(name)) {

                    ((DefaultListModel) CheckoutStudentList.getModel()).removeElement(name);
                    ((DefaultListModel) ST_StudentList.getModel()).removeElement(name);

                    if (name.equals(ST_MostBooksRead.getText())) {
                        String mostBooksRead = "";
                        int mostBooksRead_num = 0;

                        for (String student : library.getStudents()) {
                            if (Integer.parseInt(library.getStudentInfo(student)[4]) > mostBooksRead_num) {
                                mostBooksRead = student;
                                mostBooksRead_num = Integer.parseInt(library.getStudentInfo(student)[4]);
                            }
                        }
                        ST_MostBooksRead.setText(mostBooksRead);
                    }

                    JOptionPane.showMessageDialog(null, name + " removed!", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Oops! Looks like something went wrong", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_RemoveStudentButtonActionPerformed

    private void AddStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStudentButtonActionPerformed
        String name = JOptionPane.showInputDialog(null, "Name of student to add?", "Add Student", JOptionPane.QUESTION_MESSAGE);

        if (name != null) {
            name = name.trim();
            try {
                if (library.addStudent(name)) {

                    ((DefaultListModel) CheckoutStudentList.getModel()).addElement(name);
                    ((DefaultListModel) ST_StudentList.getModel()).addElement(name);

                    JOptionPane.showMessageDialog(null, name + " added!", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Oops! Looks like something went wrong", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_AddStudentButtonActionPerformed

    private void StudentTabButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTabButtonMouseClicked
        CardLayout card = (CardLayout) PageChanger.getLayout();
        card.show(PageChanger, "StudentScreen");
    }//GEN-LAST:event_StudentTabButtonMouseClicked

    private void StudentTabButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTabButtonMouseEntered
        StudentTabButton.setBackground(new java.awt.Color(100, 130, 190));
    }//GEN-LAST:event_StudentTabButtonMouseEntered

    private void StudentTabButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StudentTabButtonMouseExited
        StudentTabButton.setBackground(new java.awt.Color(47, 70, 113));
    }//GEN-LAST:event_StudentTabButtonMouseExited

    private void AddBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookButtonActionPerformed
        JTextField titleField = new JTextField();
        JTextField authorField = new JTextField();
        JTextField pageCountField = new JTextField();
        JTextField languageField = new JTextField();

        Object[] questions = new Object[]{"Please fill in all fields.", "Title (max 100 characters)", titleField,
            "Author (max 100 characters)", authorField, "Number of Pages (max 5 characters)", pageCountField,
            "Language (max 10 characters", languageField};

        int add = JOptionPane.showConfirmDialog(null, questions, "Add Book", JOptionPane.OK_CANCEL_OPTION);

        if (add == JOptionPane.OK_OPTION) {

            String title = titleField.getText().trim();
            String author = authorField.getText().trim();
            String pageCount = pageCountField.getText().trim();
            String language = languageField.getText().trim();

            try {
                if (library.addBook(title, author, pageCount, language)) {
                    ((DefaultListModel) BookList.getModel()).addElement(title);
                    ((DefaultListModel) CheckoutBookList.getModel()).addElement(title);

                    JOptionPane.showMessageDialog(null, title + " added!", "Add Book", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Oops! Looks like something went wrong", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_AddBookButtonActionPerformed

    private void RemoveBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveBookButtonActionPerformed
        String bookToRemove = JOptionPane.showInputDialog(null, "Name of book to remove:", "Remove Book", JOptionPane.QUESTION_MESSAGE);

        if (bookToRemove != null) {
            bookToRemove = bookToRemove.trim();
            try {
                if (library.removeBook(bookToRemove)) {
                    ((DefaultListModel) BookList.getModel()).removeElement(bookToRemove);
                    ((DefaultListModel) CheckoutBookList.getModel()).removeElement(bookToRemove);

                    JOptionPane.showMessageDialog(null, bookToRemove + " removed!", "Remove Book", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Oops! Looks like something went wrong", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_RemoveBookButtonActionPerformed

    /**
     * Prints the information about the book into the <code>BookInfo</code> JPanel.
     *
     * @param bookTitle The title of the book to search for.
     */
    private void setBookInfo(String bookTitle) {
        if (bookTitle == null) {
            BookTitle.setText("");
            Author.setText("");
            PageCount.setText("");
            Language.setText("");
            Availability.setText("");
        } else {
            String[] bookInfo = library.getBookInfo(bookTitle);
            if (bookInfo != null) {
                BookTitle.setText(bookTitle);
                Author.setText(bookInfo[0]);
                PageCount.setText(bookInfo[1]);
                Language.setText(bookInfo[2]);
                if (Integer.parseInt(bookInfo[3]) == 1) {
                    Availability.setText("Available");
                } else {
                    Availability.setText("Not Available. Checked out by: " + bookInfo[4]);
                }
            } else {
                BookTitle.setText("Not Found");
                Author.setText("Not Found");
                PageCount.setText("Not Found");
                Language.setText("Not Found");
                Availability.setText("Not Found");
            }
        }
    }

    private void setBookInfo2(String bookTitle) {
        if (bookTitle == null) {
            H_BookTitle.setText("");
            H_Author.setText("");
            H_PageCount.setText("");
            H_Language.setText("");
            H_Availability.setText("");
        } else {
            String[] bookInfo = library.getBookInfo(bookTitle);
            if (bookInfo != null) {
                H_BookTitle.setText(bookTitle);
                H_Author.setText(bookInfo[0]);
                H_PageCount.setText(bookInfo[1]);
                H_Language.setText(bookInfo[2]);
                if (Integer.parseInt(bookInfo[3]) == 1) {
                    H_Availability.setText("Available");
                } else {
                    H_Availability.setText("Not Available. Checked out by: " + bookInfo[4]);
                }
            } else {
                H_BookTitle.setText("Not Found");
                H_Author.setText("Not Found");
                H_PageCount.setText("Not Found");
                H_Language.setText("Not Found");
                H_Availability.setText("Not Found");
            }
        }
    }

    private void setStudentInfo(String name) {
        if (name == null) {
            StudentName.setText("");
            NumCheckedOut.setText("");
            ST_Book1.setText("");
            ST_Book2.setText("");
            ST_Book3.setText("");
            TotalBooksRead.setText("");
        } else {
            String[] studentInfo = library.getStudentInfo(name);
            if (studentInfo != null) {
                StudentName.setText(name);
                NumCheckedOut.setText(studentInfo[0]);
                ST_Book1.setText(studentInfo[1]);
                ST_Book2.setText(studentInfo[2]);
                ST_Book3.setText(studentInfo[3]);
                TotalBooksRead.setText(studentInfo[4]);
            } else {
                StudentName.setText("Not Found");
                NumCheckedOut.setText("Not Found");
                ST_Book1.setText("");
                ST_Book2.setText("");
                ST_Book3.setText("");
                TotalBooksRead.setText("Not Found");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBookButton;
    private javax.swing.JButton AddStudentButton;
    private javax.swing.JLabel Author;
    private javax.swing.JLabel Availability;
    private javax.swing.JList<String> BookList;
    private javax.swing.JLabel BookTitle;
    private javax.swing.JTextField BookTitleBox;
    private javax.swing.JTextField C_BookTitleBox;
    private javax.swing.JLabel C_ErrorText;
    private javax.swing.JLabel C_Instructions;
    private javax.swing.JButton C_SearchButton;
    private javax.swing.JLabel C_StudentHeading;
    private javax.swing.JList<String> CheckedOutList;
    private javax.swing.JButton CheckinButton;
    private javax.swing.JList<String> CheckoutBookList;
    private javax.swing.JButton CheckoutButton;
    private javax.swing.JLabel CheckoutIcon;
    private javax.swing.JPanel CheckoutScreen;
    private javax.swing.JList<String> CheckoutStudentList;
    private javax.swing.JPanel CheckoutTabButton;
    private javax.swing.JLabel CheckoutTitle;
    private javax.swing.JLabel ErrorText;
    private javax.swing.JPanel Form;
    private javax.swing.JLabel H_Author;
    private javax.swing.JLabel H_Availability;
    private javax.swing.JPanel H_BookInfo;
    private javax.swing.JLabel H_BookTitle;
    private javax.swing.JLabel H_HeadingAuthor;
    private javax.swing.JLabel H_HeadingAval;
    private javax.swing.JLabel H_HeadingBkTitl;
    private javax.swing.JLabel H_HeadingLang;
    private javax.swing.JLabel H_HeadingPageCount;
    private javax.swing.JLabel H_Language;
    private javax.swing.JLabel H_PageCount;
    private javax.swing.JLabel HeadingAuthor2;
    private javax.swing.JLabel HeadingAval;
    private javax.swing.JLabel HeadingBkTitl;
    private javax.swing.JLabel HeadingBkTitl2;
    private javax.swing.JLabel HeadingBkTitl3;
    private javax.swing.JLabel HeadingBooksRead;
    private javax.swing.JLabel HeadingCheckedOut;
    private javax.swing.JLabel HeadingLang;
    private javax.swing.JLabel HeadingNumCheckedOut;
    private javax.swing.JLabel HeadingOverdue;
    private javax.swing.JLabel HeadingPageCount;
    private javax.swing.JLabel HeadingStName;
    private javax.swing.JPanel HomeButton;
    private javax.swing.JLabel HomeIcon;
    private javax.swing.JPanel HomeScreen;
    private javax.swing.JLabel HomeTitle;
    private javax.swing.JLabel HomeWelcome;
    private javax.swing.JLabel Language;
    private javax.swing.JPanel LoggedInView;
    private javax.swing.JButton LoginButton;
    private javax.swing.JPanel LogoutButton;
    private javax.swing.JLabel LogoutIcon;
    private javax.swing.JPanel Main;
    private javax.swing.JLabel NumCheckedOut;
    private javax.swing.JPanel PageChanger;
    private javax.swing.JLabel PageCount;
    private javax.swing.JPasswordField Password;
    private javax.swing.JLabel PasswordText;
    private javax.swing.JLabel Picture;
    private javax.swing.JLabel RemoveAccount;
    private javax.swing.JButton RemoveBookButton;
    private javax.swing.JButton RemoveStudentButton;
    private javax.swing.JLabel ST_Book1;
    private javax.swing.JLabel ST_Book2;
    private javax.swing.JLabel ST_Book3;
    private javax.swing.JPanel ST_BookInfo;
    private javax.swing.JLabel ST_MostBooksRead;
    private javax.swing.JLabel ST_MostBooksReadHeading;
    private javax.swing.JLabel ST_StudentHeading;
    private javax.swing.JList<String> ST_StudentList;
    private javax.swing.JPanel S_BookInfo;
    private javax.swing.JLabel S_ErrorText;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel SearchIcon;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JPanel SearchPanel2;
    private javax.swing.JPanel SearchScreen;
    private javax.swing.JPanel SearchTabButton;
    private javax.swing.JLabel SearchTitle;
    private javax.swing.JPanel SideMenu;
    private javax.swing.JButton SignUpButton;
    private javax.swing.JPanel StartUpScreen;
    private javax.swing.JLabel StudentIcon;
    private javax.swing.JLabel StudentName;
    private javax.swing.JPanel StudentScreen;
    private javax.swing.JPanel StudentTabButton;
    private javax.swing.JLabel StudentTitle;
    private javax.swing.JList<String> StudentsCheckedOut;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel TotalBooksRead;
    private javax.swing.JTextField Username;
    private javax.swing.JLabel UsernameText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables
}
